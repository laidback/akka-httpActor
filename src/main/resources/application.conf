# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

app {
  http {
    host = "localhost"
    port = 8080
  }
}

slick-h2 {
  profile = "slick.jdbc.H2Profile$"
  db {
    connectionPool = disabled
    driver = "org.h2.Driver"
    url = "jdbc:h2:mem:akka;INIT=runscript from 'src/main/resources/evolutions/01_create_schema.sql';"
  }
}

akka {

  actor {
    provider = "local"

    deployment {
      /asset-mgmt/v1/assets {
        router = round-robin-pool
        nr-of-instances = 3
      }
      /palpatine/vader {
        router = broadcast-pool
        nr-of-instances = 1
      }
      /palpatine/troopers {
        router = broadcast-pool
        nr-of-instances = 10
      }
      /palpatine/broadcaster {
        router = broadcast-group
        routees.paths = ["/palpatine/vader", "/palpatine/troopers"]
      }
    }
  }

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  # loggers = ["akka.event.slf4j.Slf4jLogger"]

  #event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "INFO"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  # logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}
